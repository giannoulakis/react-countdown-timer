{"version":3,"sources":["Timer.js","App.js","index.js"],"names":["Timer","props","useState","Date","getTime","minutes","timestampEnd","calcTimeLeft","timeLeft","setTimeLeft","progress","setProgress","timeFormatted","setTimeFormatted","tick","Math","ceil","useEffect","floor","substr","timer","setTimeout","clearTimeout","onFinish","onUpdate","className","style","width","setPageTitle","title","document","App","inputEl","useRef","running","setRunning","setMinutes","handleStart","localStorage","setItem","handleStop","handleKeydown","e","keyCode","match","window","location","hash","saved","getItem","addEventListener","removeEventListener","current","focus","onClick","ref","onKeyDown","type","min","max","value","onChange","target","ReactDOM","render","getElementById"],"mappings":"8LAEe,SAASA,EAAMC,GAAO,IAAD,EAETC,oBAAS,IAAIC,MAAOC,UAA0B,GAAdH,EAAMI,QAAW,KAAjEC,EAFyB,sBAGAJ,mBAASK,KAHT,mBAGzBC,EAHyB,KAGfC,EAHe,OAIDP,mBAAS,GAJR,mBAIzBQ,EAJyB,KAIhBC,EAJgB,OAKST,mBAAS,SALlB,mBAKzBU,EALyB,KAKXC,EALW,KAOhC,SAASC,IACLL,EAAYF,KAGhB,SAASA,IACL,OAA6D,IAAtDQ,KAAKC,MAAMV,GAAe,IAAIH,MAAOC,WAAW,KAwB3D,OArBAa,qBAAU,WACN,KAAGT,GAAU,GAAb,CAKAG,EAAY,IAAMI,KAAKG,MAAMV,GAAwB,GAAdP,EAAMI,QAAW,KAAM,MAE9DQ,EAAiBE,KAAKG,MAAMV,EAAS,IAAK,IAAI,KAAK,IAAKA,EAAS,IAAM,IAAIW,QAAQ,EAAE,IAErF,IAAMC,EAAQC,WAAWP,EAAK,KAE9B,OAAO,kBAAMQ,aAAaF,IAVtBnB,EAAMsB,UAAYtB,EAAMsB,aAW9B,CAACf,EAASF,IAEZW,qBAAU,WACHhB,EAAMuB,UACLvB,EAAMuB,SAASZ,KAErB,CAACA,IAGC,6BACI,yBAAKa,UAAU,WAAWC,MAAO,CAACC,MAAMjB,EAAS,OACjD,yBAAKe,UAAU,SAASb,ICwBpC,SAASgB,EAAaC,GACpBC,SAASD,MAAQA,EAGJE,MAlEf,WAEE,IAAMC,EAAUC,iBAAO,MAFV,EAIiB/B,oBAAS,GAJ1B,mBAINgC,EAJM,KAIGC,EAJH,OAKiBjC,mBAAS,IAL1B,mBAKNG,EALM,KAKG+B,EALH,KAOb,SAASC,IACPC,aAAaC,QAAQ,UAAUlC,GAC/B8B,GAAW,GAGb,SAASK,IACPL,GAAW,GACXP,EAAa,YAGf,SAASa,EAAcC,GACrB,OAAmB,KAAZA,EAAEC,SAAgBH,IAuB3B,OApBAvB,qBAAU,WACR,IAAM2B,EAAQC,OAAOC,SAASC,KAAKH,MAAM,UAEzC,GAAGA,EACDR,EAAWQ,EAAM,IACjBT,GAAW,OACR,CACH,IAAMa,EAAQV,aAAaW,QAAQ,WAChCD,GAAOZ,EAAWY,GAIvB,OAFAlB,SAASoB,iBAAiB,UAAUT,GAE7B,kBAAKX,SAASqB,oBAAoB,UAAUV,MACnD,IAGFxB,qBAAU,WACJiB,GAASF,EAAQoB,QAAQC,UAC7B,CAACnB,IAGD,6BAEIA,EASA,yBAAKoB,QAAUd,EAAaX,MAAM,gBAAgBJ,UAAU,QAC1D,kBAACzB,EAAD,CAAOK,QAAUA,EAAUmB,SAAWI,EAAeL,SAAWiB,KARhE,yBAAKf,UAAU,UACb,2BAAO8B,IAAMvB,EAAUwB,UAAW,SAAAd,GAAkB,KAAZA,EAAEC,SAAgBN,KAAiBoB,KAAK,SAASC,IAAI,IAAIC,IAAI,KAAKC,MAAQvD,EAAUwD,SAAW,SAAAnB,GAAC,OAAIN,EAAWM,EAAEoB,OAAOF,UAChK,4BAAQN,QAAUjB,GAAlB,YC9CZ0B,IAASC,OAAQ,kBAAC,EAAD,MAASlC,SAASmC,eAAe,U","file":"static/js/main.5a06c8c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Timer(props){\n\n    const [timestampEnd] = useState(new Date().getTime() + props.minutes*60*1000);\n    const [timeLeft, setTimeLeft] = useState(calcTimeLeft());\n    const [progress,setProgress] = useState(0);\n    const [timeFormatted,setTimeFormatted] = useState('00:00');\n\n    function tick(){\n        setTimeLeft(calcTimeLeft());\n    }\n\n    function calcTimeLeft(){\n        return Math.ceil((timestampEnd - new Date().getTime())/1000)*1000;\n    }\n\n    useEffect(()=>{\n        if(timeLeft<=0){\n            props.onFinish && props.onFinish();\n            return;\n        }\n\n        setProgress(100 - Math.floor(timeLeft/(props.minutes*60*1000)*100));\n        \n        setTimeFormatted(Math.floor(timeLeft/1000/60)+':'+('0'+(timeLeft/1000)%60).substr(-2,2));\n\n        const timer = setTimeout(tick,1000);\n\n        return () => clearTimeout(timer);\n    },[timeLeft,timestampEnd])    \n\n    useEffect(()=>{\n        if(props.onUpdate){\n            props.onUpdate(timeFormatted)\n        }\n    },[timeFormatted])\n\n    return (\n        <div>\n            <div className=\"progress\" style={{width:progress+'%'}}></div>\n            <div className=\"clock\">{timeFormatted}</div>\n        </div>\n    );\n\n\n}","import React, { useState, useRef, useEffect } from 'react';\nimport Timer from './Timer';\n\nfunction App() {\n  \n  const inputEl = useRef(null);\n  \n  const [running, setRunning] = useState(false);\n  const [minutes, setMinutes] = useState(25);\n\n  function handleStart(){\n    localStorage.setItem('minutes',minutes); //remember \n    setRunning(true);\n  }\n  \n  function handleStop(){\n    setRunning(false);\n    setPageTitle('Finished')\n  }\n\n  function handleKeydown(e){\n    return e.keyCode===27 && handleStop() \n  }\n\n  useEffect(()=>{\n    const match = window.location.hash.match(/#(\\d+)/);\n\n    if(match){\n      setMinutes(match[1]);\n      setRunning(true);\n\t\t} else {\n      const saved = localStorage.getItem('minutes');\n      if(saved) setMinutes(saved);\n\t\t}\n    document.addEventListener('keydown',handleKeydown);\n    \n    return ()=> document.removeEventListener('keydown',handleKeydown);\n  },[])\n\n \n  useEffect(()=>{\n    if(!running) inputEl.current.focus();\n  },[running])\n  \n  return (\n    <div>\n\n      {!running?\n        (\n          <div className=\"config\">\n            <input ref={ inputEl } onKeyDown={e =>{ e.keyCode===13 && handleStart() }} type=\"number\" min=\"1\" max=\"60\" value={ minutes } onChange={ e => setMinutes(e.target.value) } />\n            <button onClick={ handleStart }>Start</button>\n          </div>\n        )\n        :\n      (\n        <div onClick={ handleStop } title=\"click to stop\" className=\"hand\">\n          <Timer minutes={ minutes } onUpdate={ setPageTitle } onFinish={ handleStop } />\n        </div>\n      )}\n    </div>\n  );\n}\n\n\nfunction setPageTitle(title){\n  document.title = title;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root') );\n"],"sourceRoot":""}